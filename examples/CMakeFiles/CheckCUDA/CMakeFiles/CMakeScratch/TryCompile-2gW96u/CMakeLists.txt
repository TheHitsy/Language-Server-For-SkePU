cmake_minimum_required(VERSION 3.25.2.0)
project(CMAKE_TRY_COMPILE CUDA)
set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES "")
set(CMAKE_CUDA_USE_RESPONSE_FILE_FOR_INCLUDES OFF)
set(CMAKE_CUDA_USE_RESPONSE_FILE_FOR_LIBRARIES OFF)
set(CMAKE_CUDA_USE_RESPONSE_FILE_FOR_OBJECTS OFF)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CUDA_FLAGS "")
set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_CUDA_FLAGS_DEBUG "-g")
set(CMAKE_EXE_LINKER_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-Xcompiler=-v]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/home/marcus/git_folder/skepu/examples/CMakeFiles/CheckCUDA/CMakeFiles/CMakeScratch/TryCompile-2gW96u")
add_executable(cmTC_050da "/usr/share/cmake-3.25/Modules/CMakeCUDACompilerABI.cu")
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_050da_loc"
     CONTENT $<TARGET_FILE:cmTC_050da>)
target_link_libraries(cmTC_050da ${LINK_LIBRARIES})
